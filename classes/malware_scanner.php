<?php

class malCure_Malware_Scanner extends malCure_Scanner {
	static function get_instance() {
		static $instance = null;
		if ( is_null( $instance ) ) {
			$instance = new self();
			$instance->init();
		}
		return $instance;
	}

	private function __construct() {
	}

	function init() {
		add_action( 'mss_settings_menu', array( $this, 'submenu_page' ) );

		add_action( 'wp_ajax_mss_scan', array( $this, 'mss_scan_handler' ) );
		add_action( 'wp_ajax_nopriv_mss_scan', '__return_false' );

		add_action( 'wp_ajax_mss_scan_status', array( $this, 'mss_scan_status_handler' ) );
		add_action( 'wp_ajax_nopriv_mss_scan_status', '__return_false' );
	}

	function submenu_page() {
		add_submenu_page(
			'_mss',  // parent_slug
			'malCure WordPress Malware Scanner', // page_title
			'Malware Scanner', // menu_title
			MSS_GOD, // capability
			'scanner_mss',    // menu slug
			array( $this, 'scanner_mss_page' ), // callback
			null // position
		);
	}

	function mss_scan_status_handler() {
		$status = get_option( 'MSS_SCAN_PROGRESS' );
		if ( $status ) {
			wp_send_json_success( $status );
		}
		wp_send_json_error();
	}

	function mss_scan_handler() {
		//session_write_close();

		$files = malCure_Utils::get_files();
		//wp_send_json( $_REQUEST );
		//wp_send_json_error( $_REQUEST );
		wp_send_json_success( $files );
	}

	function scanner_mss_page() {
		?>
		<div class="wrap">
			<h1>malCure WordPress Integrity Checker</h1>
			<div class="container">
				<?php
				echo '<div id="mss_scanner_branding" class="mss_branding" >' . $this->render_branding() . '</div>';
				?>
				<div id="mss_scanner_dashboard">
				<?php echo '<a href="#" class="button-primary" role="button" id="mss_scan_btn">Scan </a>'; ?>
				</div> <!-- / mss_scanner_dashboard -->
			</div> <!-- / container -->
		</div> <!-- / wrap -->

		<script type="text/javascript">
			jQuery(document).ready(function($){
				$("#mss_scan_btn").click(function(){
					mss_scan = {
						mss_scan_nonce: '<?php echo wp_create_nonce( 'mss_scan' ); ?>',
						action: "mss_scan",
						//cachebust: Date.now(), // 
					};
					//$("#mss_scan").fadeTo("slow",.1,);
					$.ajax({
						url: ajaxurl,
						method: 'POST',
						data: mss_scan,
						success: function(data, textStatus, jqXHR) {
							console.dir('success Data Begins');
							console.dir(data);
							console.dir(textStatus);
							console.dir(jqXHR);
							console.dir('success Data Ends');

							mss_status_updater = setInterval(mss_update_scan_status,1000);

							if ((typeof data) != 'object') { // is the server not sending us JSON?
								//response = JSON.parse( response );
							}
							if (data.hasOwnProperty('success')) { // ajax request has a success but we haven't tested if success is true or false
								
							} else { // perhaps this is just JSON without a success object
								
							}
						},
						error: function( jqXHR, textStatus, errorThrown){
							// console.dir('error Data Begins');
							// console.dir(jqXHR);
							// console.dir(textStatus);
							// console.dir(errorThrown);
							// console.dir('error Data Ends');
						},
						complete: function(jqXHR_data, textStatus) { // use this since we need to run and catch regardless of success and failure
							// console.dir('complete Data Begins');
							// console.dir(jqXHR_data);
							// console.dir(textStatus);
							// console.dir('complete Data Ends');
							// // a good JSON response may have status: 200, statusText: "success", responseJSON (object)
						},
					});
				});

				mss_status_updater = setInterval(mss_update_scan_status,1000);
			});

		function mss_update_scan_status() {
			var $ = jQuery.noConflict();
			mss_scan_status = {
				mss_scan_status_nonce: '<?php echo wp_create_nonce( 'mss_scan_status' ); ?>',
				action: "mss_scan_status",
				//cachebust: Date.now(), // 
			};
			//$("#mss_scan").fadeTo("slow",.1,);
			$.ajax({
				url: ajaxurl,
				method: 'POST',
				data: mss_scan_status,
				success: function(data, textStatus, jqXHR) {
					console.dir('updater success Data Begins');
					console.dir(data);
					console.dir(textStatus);
					console.dir(jqXHR);
					console.dir('updater success Data Ends');

					if(data.hasOwnProperty('success') && data.success) {

					}
					else {
						clearInterval(mss_status_updater);
						console.log('Updater got failure. Please reload the page.')
					}
					if ((typeof data) != 'object') { // is the server not sending us JSON?
						//response = JSON.parse( response );
					}
					if (data.hasOwnProperty('success')) { // ajax request has a success but we haven't tested if success is true or false
						
					} else { // perhaps this is just JSON without a success object
						
					}
				},
				error: function( jqXHR, textStatus, errorThrown){
					console.dir('updater error Data Begins');
					console.dir(jqXHR);
					console.dir(textStatus);
					console.dir(errorThrown);
					console.dir('updater error Data Ends');
				},
				complete: function(jqXHR_data, textStatus) { // use this since we need to run and catch regardless of success and failure
					console.dir('updater complete Data Begins');
					console.dir(jqXHR_data);
					console.dir(textStatus);
					console.dir('updater complete Data Ends');
					// a good JSON response may have status: 200, statusText: "success", responseJSON (object)
				},
			});
		}
		</script>
		<?php
	}

	function render_branding() {
		return '<img src="' . MSS_URL . 'assets/logo-light-trans.svg" />';
	}

	
}


malCure_Malware_Scanner::get_instance();
